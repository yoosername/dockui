# Here yo uspecify a name, key and version of your plugin which is used
# by the plugin service to instantiate a unique Plugin at runtime
# plugins are linked to their docker containers so when the container goes down the plugin dies
name: "Tour Plugin"
key: "tour-plugin"

# Modules do the work for the plugin. See the various types for explanation of what they do
modules:

  # Routes are a way to rewrite more readable urls for a given webpage or resource
    - type : "route"
      name: "Tour route"
      key: "tour-route"
      route: "/tour"
      path: "/plugins/tour-plugin/webpages/tour"

  # Webitems are links that you can insert in various places in the webapp
  # Locations are defined within the templates themselves
    - type : "webitem"
      name: "Documentation link"
      key: "documentation-link"
      link: "/plugins/docs-plugin/webpages/docs"
      location: "app.home.header.primary.dropdown.webitems"
      weight: 10
      text: "Documentation"

    - type : "webitem"
      name: "Tutorial link"
      key: "tutorial-link"
      link: "/plugins/tutorial-plugin/webpages/tutorial"
      location: "app.home.header.primary.dropdown.webitems"
      weight: 10
      text: "5 Min Tutorial"

    - type : "webitem"
      name: "Action Button"
      key: "action-button"
      link: "#"
      location: "app.home.header.primary.webitems"
      weight: 10
      text: "Action"

  # Webfragments are html partials which will be injected into the specified location
  # for example to show a widget on an existing page ( like AUI dialog2 hidden dialog html )
  # the path is to the served html template, and the fragment is a CSS selector for a single element to
  # use as the actual fragment for this module
    - type : "webfragment"
      name : "Simple plugin example webfragment"
      key : "example-webfragment"
      path : "/fragments"
      fragment : "#demo-dialog"
      location: "demo.footer"
      weight : 10

  # Webpages are entire html pages which can optionally be decorated by a specific decorator
  # and additionally specify resourcesFor meta to have static resources injected from contributing plugins
    - type : "webpage"
      name : "App tour homepage"
      key : "tour"
      path : "/tour"

    - type : "webpage"
      name : "Manage Plugins"
      key : "plugin-admin"
      path : "/admin/plugins"

  # Rest modules define a single endpoint that is simply proxied by the main api gateway
    - type : "rest"
      name : "example rest endpoint"
      key : "example-rest"
      path : "/tasks"

  # Web resources define static resources that you can contribute to existing webpages
  # by giving a context. The context is used by webpages via the resourcesFor Meta tag
    - type : "webresources"
      name : "App tour webresources"
      key : "tour-resources"
      base : "/resources/"
      resources :
        - type: "js"
          path : "tour.javascript.js"
        - type: "css"
          path : "tour.style.css"
      context : "plugin.tour"

    - type : "webresources"
      name : "Plugin admin webresources"
      key : "plugin-admin-webresources"
      base : "/resources/"
      resources :
        - type: "js"
          path : "plugins.javascript.js"
      context : "plugins.list"
